# Generated by Django 2.0.6 on 2018-06-25 16:24

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Marvin',
            fields=[
                ('id', models.AutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID')),
                ('name', models.CharField(
                    max_length=100,
                    unique=True,
                    verbose_name='name')),
                ('hostname', models.CharField(
                    max_length=127,
                    validators=[django.core.validators.RegexValidator(
                        '([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?'
                        '(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*'
                        '\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)'
                        '\\.?|localhost)',
                        message='Please provide a valid host name')],
                    verbose_name='hostname')),
                ('type', models.CharField(
                    max_length=50,
                    verbose_name='type')),
                ('version', django.contrib.postgres.fields.ArrayField(
                    base_field=models.PositiveSmallIntegerField(),
                    size=None,
                    verbose_name='version')),
                ('browser_name', models.CharField(
                    max_length=150,
                    verbose_name='browser name')),
                ('browser_version', django.contrib.postgres.fields.ArrayField(
                    base_field=models.PositiveSmallIntegerField(),
                    size=None,
                    verbose_name='browser version')),
                ('instance_type', models.CharField(
                    choices=[('v4only', 'IPv4-only'), ('v6only', 'IPv6-only'), ('nat64', 'IPv6 with NAT64')],
                    max_length=10,
                    verbose_name='instance type')),
                ('addresses', django.contrib.postgres.fields.ArrayField(
                    base_field=models.GenericIPAddressField(),
                    default=list,
                    size=None,
                    verbose_name='addresses')),
                ('first_seen', models.DateTimeField(
                    auto_now_add=True,
                    verbose_name='first seen')),
                ('last_seen', models.DateTimeField(
                    verbose_name='last seen')),
                ('alive', models.BooleanField(
                    default=True,
                    verbose_name='alive')),
                ('parallel_tasks_limit', models.PositiveIntegerField(
                    verbose_name='parallel tasks limit')),
            ],
            options={
                'ordering': ('-alive', 'instance_type', '-last_seen'),
            },
        ),
    ]
